class Solution {

    public boolean isPalindrome(String s){
        int l = 0;
        int r = s.length()-1;

        while(l <= r){
            if(s.charAt(l++) != s.charAt(r--)){
                return false;
            }
        }

        return true;
    }

    public String longestPalindrome(String s) {
        String answer = s.substring(0,1);

        for(int i = s.length(); i > 0; i--){
            for(int j = 0; j + i <= s.length(); j++){
                String subS = s.substring(j, j+i);
                if(isPalindrome(subS)){
                    return subS;
                }
            }
        }

        return answer;
    }
}
//
class Solution {
    public String longestPalindrome(String s) {
        String answer = "";
        int ansLen = 0;

        for(int i = 0; i < s.length(); i++){
            int l = i;
            int r = i;

            while(l >= 0 && r < s.length() && s.charAt(l) == s.charAt(r)){
                if((r-l+1) >  ansLen){
                    answer = s.substring(l, r+1);
                    ansLen = r-l+1;
                }
                l--;
                r++;
            }

            l = i;
            r = i+1;

            while(l >= 0 && r < s.length() && s.charAt(l) == s.charAt(r)){
                if((r-l+1) >  ansLen){
                    answer = s.substring(l, r+1);
                    ansLen = r-l+1;
                }
                l--;
                r++;
            }
        }

        return answer;
    }
}