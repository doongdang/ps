/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
import java.util.Queue;
import java.util.LinkedList;


class Pair{
    TreeNode node;
    int level;

    public Pair(TreeNode node, int level){
        this.node = node;
        this.level = level;
    }
}

class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> ans = new LinkedList<>();

        Queue<Pair> queue = new LinkedList<>();
        queue.offer(new Pair(root, 1));

        int curLevel = 1;
        List<Integer> elements = new LinkedList<>();

        while(!queue.isEmpty()){
            Pair cur = queue.poll();

            if(cur.node == null){
                continue;
            }

            if(curLevel != cur.level){
                ans.add(elements);
                elements = new LinkedList<>();
                curLevel = cur.level;
            }

            elements.add(cur.node.val);
            queue.offer(new Pair(cur.node.left, cur.level+1));
            queue.offer(new Pair(cur.node.right, cur.level+1));
        }

        if(elements.size() > 0){
            ans.add(elements);
        }


        return ans;
    }
}