class Solution {
    public int rob(int[] nums) {
        if(nums.length == 1){
            return nums[0];
        }

        if(nums.length == 2){
            return Math.max(nums[0], nums[1]);
        }

        int[] dp = new int[nums.length];
        dp[0] = nums[0];
        dp[1] = nums[1];
        dp[2] = dp[0] + nums[2];

        int ans = Math.max(dp[0], Math.max(dp[1], dp[2]));

        for(int i = 3; i < nums.length; i++){
            dp[i] = Math.max(dp[i-2], dp[i-3]) + nums[i];
            ans = Math.max(ans, dp[i]);
        }

        return ans;
    }
}
/**
*class Solution {
*   public int rob(int[] nums) {
*        int fst = 0; 
*        int snd = 0;
*
*        for(int num : nums){
*            int tmp = Math.max(fst + num, snd);
*            fst = snd;
*            snd = tmp;
*        }
*
*        return snd;
*    }
*}
**/