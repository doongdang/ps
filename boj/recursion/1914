import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;

public class Main {

	static int N;
	static StringBuilder sb = new StringBuilder();
	public static void hanoiTower(int n, int left, int mid, int right){
		if(n == 1){
			sb.append(left).append(" ").append(right).append("\n");
			return;
		}
		hanoiTower(n-1, left, right, mid);
		sb.append(left).append(" ").append(right).append("\n");

		hanoiTower(n-1, mid, left, right);
	}

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());
		BigInteger answer = BigInteger.ONE;
		for (int i = 0; i < N; i++){
			answer = answer.multiply(BigInteger.valueOf(2));
		}
		System.out.println(answer.subtract(BigInteger.ONE));
		if(N <= 20){
			hanoiTower(N, 1, 2, 3);
			System.out.println(sb);
		}
	}
}