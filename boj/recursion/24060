import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {
	static int N;
	static int K;
	static int[] arr;
	static int[] tmp;
	static int count = 0;
	static int ans = -1;

	public static void mergeSort(int st, int en) {
		if (st < en){
			int mid = (st+en)/2;
			mergeSort(st, mid);
			mergeSort(mid + 1, en);
			merge(st, mid, en);
		}
	}

		public static void merge(int st, int mid, int en) {
		int i = st;
		int j = mid + 1;
		int t = 0;
		while (i <= mid && j <= en) {
			if (arr[i] <= arr[j]) tmp[t++] = arr[i++];
        	else tmp[t++] = arr[j++];
		}
		while (i <= mid) {
			tmp[t++] = arr[i++];
		}
		while (j <= en) {
			tmp[t++] = arr[j++];
		}
		i = st;
		t = 0;
		while (i <= en) {
			count++;
			arr[i++] = tmp[t++];
			if(count == K) ans = arr[i-1];
		}
	}
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		N = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		arr = new int[N];
		tmp = new int[N];

		st = new StringTokenizer(br.readLine());

		for (int i = 0; i < N; i++) {
			arr[i] = Integer.parseInt(st.nextToken());
		}

		mergeSort(0, N-1);
		System.out.println(ans);
	}
}