import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.List;
import java.util.StringTokenizer;

/*
	접근법

*/

public class Main {
	int N;
	int M;
	boolean[] vis;
	List<Integer>[] adjList;

	public void init() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		vis = new boolean[N + 1];
		adjList = new List[N + 1];

		for (int i = 1; i <= N; i++) {
			adjList[i] = new LinkedList<>();
		}

		for (int i = 0; i < M; i++) {
			st = new StringTokenizer(br.readLine());
			int u = Integer.parseInt(st.nextToken());
			int v = Integer.parseInt(st.nextToken());
			adjList[u].add(v);
			adjList[v].add(u);
		}
	}

	public void solve() {
		int answer = 0;

		for (int i = 1; i <= N; i++) {
			if(!vis[i]) {
				vis[i] = true;
				dfs(i);
				answer++;
			}
		}

		System.out.println(answer);
	}

	public void dfs(int cur) {
		for (int nxt : adjList[cur]) {
			if(!vis[nxt]) {
				vis[nxt] = true;
				dfs(nxt);
			}
		}
	}

	public static void main(String[] args) throws IOException {
		Main m = new Main();
		m.init();
		m.solve();
	}
}