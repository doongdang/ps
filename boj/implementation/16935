import java.io.*;
import java.util.*;

public class Main {
	static int N, M, R;
	static int[][] arr;
	static int[][] tmp;

	public static void copyToOrigin(int n, int m) {
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				arr[i][j] = tmp[i][j];
			}
		}
	}

	public static void oper1() {
		for (int i = 0; i < N / 2; i++) {
			for (int j = 0; j < M; j++) {
				int swap = arr[i][j];
				arr[i][j] = arr[N - 1 - i][j];
				arr[N - 1 - i][j] = swap;
			}
		}
	}

	public static void oper2() {
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < M / 2; j++) {
				int swap = arr[i][j];
				arr[i][j] = arr[i][M - 1 - j];
				arr[i][M - 1 - j] = swap;
			}
		}
	}

	public static void oper3() {
		tmp = new int[M][N];

		for (int i = 0; i < M; i++) {
			for (int j = 0; j < N; j++) {
				tmp[i][j] = arr[N - 1 - j][i];
			}
		}

		arr = new int[M][N];

		copyToOrigin(M, N);
		int swap = N;
		N = M;
		M = swap;
	}

	public static void oper4() {
		tmp = new int[M][N];

		for (int i = 0; i < M; i++) {
			for (int j = 0; j < N; j++) {
				tmp[i][j] = arr[j][M - 1 - i];
			}
		}

		arr = new int[M][N];
		copyToOrigin(M, N);
		int swap = N;
		N = M;
		M = swap;
	}

	public static void oper5() {
		tmp = new int[N][M];

		// 원본 1 -> tmp 2
		for (int i = 0; i < N / 2; i++) {
			for (int j = 0; j < M / 2; j++) {
				tmp[i][j + M / 2] = arr[i][j];
			}
		}

		// 원본 2 -> tmp 3
		for (int i = 0; i < N / 2; i++) {
			for (int j = M / 2; j < M; j++) {
				tmp[i + N / 2][j] = arr[i][j];
			}
		}

		// 원본 3 -> tmp 4;
		for (int i = N / 2; i < N; i++) {
			for (int j = M / 2; j < M; j++) {
				tmp[i][j - M / 2] = arr[i][j];
			}
		}

		// 원본 4 -> tmp 1;
		for (int i = N / 2; i < N; i++) {
			for (int j = 0; j < M / 2; j++) {
				tmp[i - N / 2][j] = arr[i][j];
			}
		}

		copyToOrigin(N, M);
	}

	public static void oper6() {
		tmp = new int[N][M];

		// 원본 1 -> tmp 4
		for (int i = 0; i < N / 2; i++) {
			for (int j = 0; j < M / 2; j++) {
				tmp[i + N / 2][j] = arr[i][j];
			}
		}

		// 원본 4 -> tmp 3
		for (int i = N / 2; i < N; i++) {
			for (int j = 0; j < M / 2; j++) {
				tmp[i][j + M / 2] = arr[i][j];
			}
		}
		
		// 원본 3 -> tmp 2;
		for (int i = N / 2; i < N; i++) {
			for (int j = M / 2; j < M; j++) {
				tmp[i - N / 2][j] = arr[i][j];
			}
		}

		// 원본 2 -> tmp 1;
		for (int i = 0; i < N / 2; i++) {
			for (int j = M / 2; j < M; j++) {
				tmp[i][j - M / 2] = arr[i][j];
			}
		}

		copyToOrigin(N, M);
	}

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		StringBuilder sb = new StringBuilder();

		st = new StringTokenizer(br.readLine());

		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		R = Integer.parseInt(st.nextToken());

		arr = new int[N][M];

		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j = 0; j < M; j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
			}
		}

		int[] operators = new int[R];

		st = new StringTokenizer(br.readLine());

		for (int i = 0; i < R; i++) {
			operators[i] = Integer.parseInt(st.nextToken());
		}

		for (int operator : operators) {
			if (operator == 1)
				oper1();
			else if (operator == 2)
				oper2();
			else if (operator == 3)
				oper3();
			else if (operator == 4)
				oper4();
			else if (operator == 5)
				oper5();
			else if (operator == 6)
				oper6();
		}

		for (int[] r : arr) {
			for (int c : r) {
				sb.append(c).append(" ");
			}
			sb.append("\n");
		}
		System.out.println(sb);
	}
}
