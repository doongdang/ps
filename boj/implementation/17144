import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {
	static int R;
	static int C;
	static int T;
	static int upAir;
	static int downAir;
	static int[] dx = {-1, 0, 1, 0};
	static int[] dy = {0, -1, 0, 1};

	static int[][] room;
	static int[][] dust;

	public static void divDust(int x, int y){
		int divDustSize = room[x][y]/5;

		for(int dir = 0; dir < 4; dir++){
			int nx = x + dx[dir];
			int ny = y + dy[dir];

			if(nx < 0 || ny < 0 || nx >= R || ny >= C) continue;
			if(room[nx][ny] == -1) continue;
			dust[nx][ny] += divDustSize;
			room[x][y] -= divDustSize;
		}

	}
	public static void upRotate(){
		for(int i = upAir-2; i >= 0; i--){
			room[i+1][0] = room[i][0];
		}

		for(int i = 1; i < C; i++){
			room[0][i-1] = room[0][i];
		}

		for(int i = 1; i <= upAir; i++){
			room[i-1][C-1] = room[i][C-1];
		}

		for(int i = C-2; i >= 1; i--){
			room[upAir][i+1] = room[upAir][i];
		}

		room[upAir][1] = 0;

	}

	public static void downRotate(){
		for (int i = downAir + 2; i < R; i++) {
			room[i-1][0] = room[i][0];
		}

		for (int i = 1; i < C; i++) {
			room[R-1][i-1] = room[R-1][i];
		}

		for (int i = R-2; i >= downAir; i--) {
			room[i+1][C-1] = room[i][C-1];
		}

		for (int i = C-2; i >= 1; i--) {
			room[downAir][i+1] = room[downAir][i];
		}

		room[downAir][1] = 0;
	}



	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;

		st = new StringTokenizer(br.readLine());

		R = Integer.parseInt(st.nextToken());
		C = Integer.parseInt(st.nextToken());
		T = Integer.parseInt(st.nextToken());

		room = new int[R][C];
		upAir = -1;
		downAir = -1;


		for(int i = 0; i < R; i++){
			st = new StringTokenizer(br.readLine());
			for(int j = 0; j < C; j++){
				room[i][j] = Integer.parseInt(st.nextToken());
				if(room[i][j] == -1) {
					if(upAir == -1) upAir = i;
					else downAir = i;
				}
			}
		}

		for(int time = 0; time < T; time++){
			dust = new int[R][C];

			for(int i = 0; i < R; i++){
				for(int j = 0; j < C; j++){
					if(room[i][j] >= 5){
						divDust(i, j);
					}
				}
			}

			for(int i = 0; i < R; i++){
				for(int j = 0; j < C; j++){
					room[i][j] += dust[i][j];
				}
			}
			upRotate();
			downRotate();
		}

		int ans = 0;

		for (int i = 0; i < R; i++) {
			for(int j = 0; j < C; j++){
				ans += room[i][j];
			}
		}

		ans += 2;

		System.out.println(ans);
	}
}