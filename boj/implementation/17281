import java.io.*;
import java.util.*;

public class Main {	
	static int N;
	static int[][] expected;
	static int[] rest = {2,3,4,5,6,7,8,9};
	static int[] choice;
	static int[] orders;
	static boolean[] vis;
	static int[] base;
	static int score;
	static int ans;
	
	public static void moveBase(int dist) {
		for(int i = 3; i >= 1; i--) {
			if(i + dist > 3 && base[i] == 1) {
				score++;
				base[i] = 0;
			}
			else if(i + dist <= 3 && base[i] == 1)  {
				base[i] = 0;
				base[i+dist] = 1;
			}
		}
		
		if(dist == 4) score++;
		else base[dist] = 1;
	}
	
	public static void dfs(int cnt) {
		if(cnt == 8) {
			score = 0;
			
			for(int i = 0; i <= 3; i++) {
				orders[i] = choice[i];
			}
			
			for(int i = 3; i < 8; i++) {
				orders[i+1] = choice[i];
			}
			orders[3] = 1;
			
			
			int idx = 0;
			
			for(int inning = 1; inning <= N; inning++) {
				base = new int[4];
				int outCnt = 0;
				while(outCnt != 3) {
					if(expected[inning][orders[idx]] == 1) {
						moveBase(1);
					}else if(expected[inning][orders[idx]] == 2) {
						moveBase(2);
					}else if(expected[inning][orders[idx]] == 3) {
						moveBase(3);
					}else if(expected[inning][orders[idx]] == 4) {
						moveBase(4);
					}else if(expected[inning][orders[idx]] == 0) {
						outCnt += 1;
					}
					idx += 1;
					idx %= 9;
				}
			}
			
			ans = Math.max(ans, score);
			return;
		}
		
		
		for(int i = 0; i < rest.length; i++) {
			if(!vis[rest[i]]) {
				vis[rest[i]] = true;
				choice[cnt] = rest[i]; 
				dfs(cnt+1);
				vis[rest[i]] = false;
			}
		}
		
	}
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		StringBuilder sb = new StringBuilder();
			
		N = Integer.parseInt(br.readLine());
		expected = new int[N+1][10];
		vis = new boolean[10];
		orders = new int[9];
		choice = new int[8];
		
		for(int i = 1; i <= N; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j = 1; j < 10; j++) {
				expected[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		dfs(0);
		
		System.out.println(ans);
	}
}
