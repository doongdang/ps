import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

public class Main {
	int N;
	int M;
	int[] lights;
	List<int[]> commands;

	public void init() throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		lights = new int[N];
		commands = new ArrayList<int[]>();
		st = new StringTokenizer(br.readLine());

		for (int i = 0; i < N; i++) {
			lights[i] = Integer.parseInt(st.nextToken());
		}

		for (int i = 0; i < M; i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			int c = Integer.parseInt(st.nextToken());
			commands.add(new int[]{a, b, c});
		}
	}

	public void solve() {
		for (int i = 0; i < M; i++) {
			runCommand(i);
		}

		StringBuilder answer = new StringBuilder();

		for (int light : lights) {
			answer.append(light).append(" ");
		}

		System.out.println(answer);
	}

	private void runCommand(int curIdx) {
		int[] command = commands.get(curIdx);
		int a = command[0];
		int b = command[1];
		int c = command[2];
		changeStretch(a, b, c);
	}

	private void changeStretch(int a, int b, int c) {
		b -= 1;

		if(a == 1){
			lights[b] = c;
			return;
		}

		c -= 1;

		for (int i = b; i <= c; i++) {
			if(a == 2) {
				lights[i] = lights[i] == 0 ? 1 : 0;
			}
			else if(a == 3) lights[i] = 0;
			else if(a == 4) lights[i] = 1;
		}
	}

	public static void main(String[] args) throws Exception {
		Main main = new Main();
		main.init();
		main.solve();
	}
}