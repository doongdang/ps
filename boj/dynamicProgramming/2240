import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		int T =  Integer.parseInt(st.nextToken());
		int W =  Integer.parseInt(st.nextToken());

		int[] tree = new int[T+1];
		int[][][] dp = new int[T+1][W+1][2];

		for (int i = 1; i <= T; i++) {
			tree[i] = Integer.parseInt(br.readLine()) - 1;
		}

		for (int i = 1; i <= T ; i++) {
			dp[i][0][0] = dp[i-1][0][0];
			if(tree[i] == 0){
				dp[i][0][0] += 1;
			}

			for (int j = 1; j <= W; j++) {
				if(i < j) break;
				if(tree[i] == 0){
					dp[i][j][0] = Math.max(dp[i-1][j][0], dp[i-1][j-1][1]) + 1;
					dp[i][j][1] = Math.max(dp[i-1][j-1][0], dp[i-1][j][1]);
				}else{
					dp[i][j][0] = Math.max(dp[i-1][j][0], dp[i-1][j-1][1]);
					dp[i][j][1] = Math.max(dp[i-1][j-1][0], dp[i-1][j][1]) + 1;
				}
			}

		}
		int ans = 0;

		for (int i = 1; i <= W; i++) {
			ans = Math.max(ans, Math.max(dp[T][i][0], dp[T][i][1]));
		}

		System.out.println(ans);
	}
}