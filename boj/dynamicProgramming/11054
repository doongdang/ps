import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {
	int N;
	int[] A;
	int[] lis;
	int[] lds;

	public void init() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		N = Integer.parseInt(br.readLine());
		A = new int[N];
		lis = new int[N];
		lds = new int[N];

		StringTokenizer st = new StringTokenizer(br.readLine());

		for (int i = 0; i < N; i++) {
			A[i] = Integer.parseInt(st.nextToken());
		}
	}

	public void solve() {
		Arrays.fill(lis, 1);
		Arrays.fill(lds, 1);

		for (int i = 0; i < N; i++) {
			for (int j = 0; j < i; j++) {
				if(A[i] > A[j]) {
					lis[i] = Math.max(lis[i], lis[j] + 1);
				}
			}
		}

		for (int i = N-1; i >= 0; i--) {
			for (int j = N-1; j > i; j--) {
				if(A[i] > A[j]) {
					lds[i] = Math.max(lds[i], lds[j] + 1);
				}
			}
		}

		int answer = 1;

		for (int i = 0; i < N; i++) {
			answer = Math.max(answer, lis[i] + lds[i] - 1);
		}
		System.out.println(answer);
	}

	public static void main(String[] args) throws IOException {
		Main m = new Main();
		m.init();
		m.solve();
	}
}