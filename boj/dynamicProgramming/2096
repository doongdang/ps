import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
    int N;
    int[][] dp;
    int[][] board;
    int maxVal, minVal;

    public void init() throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        N = Integer.parseInt(br.readLine());

        dp = new int[N][3];
        board = new int[N][3];

        for (int i = 0; i < N; i++) {
            StringTokenizer st = new StringTokenizer(br.readLine());

            board[i][0] = Integer.parseInt(st.nextToken());
            board[i][1] = Integer.parseInt(st.nextToken());
            board[i][2] = Integer.parseInt(st.nextToken());
        }

        dp[0][0] = board[0][0];
        dp[0][1] = board[0][1];
        dp[0][2] = board[0][2];
    }

    public void fillDp(boolean maxFlag){
        for (int row = 1; row < N; row++) {
            for (int col = 0; col < 3; col++) {
                dp[row][col] = board[row][col] + calculate(col-1, col, col+1, row-1, maxFlag);
            }
        }
    }

    public int calculate(int col1, int col2, int col3, int row, boolean maxFlag){
        int val = maxFlag ? Integer.MIN_VALUE : Integer.MAX_VALUE;

        if(isInBound(col1)){
            val = maxFlag ? Math.max(val, dp[row][col1]) : Math.min(val, dp[row][col1]);
        }

        if(isInBound(col2)){
            val = maxFlag ? Math.max(val, dp[row][col2]) : Math.min(val, dp[row][col2]);
        }

        if(isInBound(col3)){
            val = maxFlag ? Math.max(val, dp[row][col3]) : Math.min(val, dp[row][col3]);
        }

        return val;
    }

    public boolean isInBound(int num){
        return num >= 0 && num < 3;
    }

    public void calculateVal(boolean maxFlag){
        int val = maxFlag ? Integer.MIN_VALUE : Integer.MAX_VALUE;

        for (int i = 0; i < 3; i++) {
            val = maxFlag ? Math.max(val, dp[N-1][i]) : Math.min(val, dp[N-1][i]);
        }

        if (maxFlag){
            maxVal = val;
        }else{
            minVal = val;
        }
    }

    public static void main(String[] args) throws IOException {
        Main m = new Main();
        boolean maxFlag = true;

        m.init();

        m.fillDp(maxFlag);
        m.calculateVal(maxFlag);

        m.fillDp(!maxFlag);
        m.calculateVal(!maxFlag);

        System.out.println(m.maxVal + " " + m.minVal);
    }
}
