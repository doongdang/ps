import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {//공유기 간의 거리가 k일 때 C개의 공유기 설치가 가능한가?
	static int N;
	static int M;
	static int[] asset;
	public static boolean canAssign(int money){
		int sum = 0;

		for (int i = 0; i < N; i++) {
			if(money >= asset[i]){
				sum += asset[i];
			}else{
				sum += money;
			}
		}


		return sum <= M;
	}

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;


		N = Integer.parseInt(br.readLine());
		asset = new int[N];

		st = new StringTokenizer(br.readLine());

		for (int i = 0; i < N; i++) {
			asset[i] = Integer.parseInt(st.nextToken());
		}

		M = Integer.parseInt(br.readLine());

		Arrays.sort(asset);

		int minAsset = 1;
		int maxAsset = asset[N-1]+1;

		while(minAsset < maxAsset){
			int midAsset = (minAsset + maxAsset) / 2;

			if(canAssign(midAsset)){
				minAsset = midAsset + 1;
			}else{
				maxAsset = midAsset;
			}
		}

		System.out.println(minAsset-1);
	}
}
