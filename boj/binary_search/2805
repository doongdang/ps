import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

/*
	접근법

*/

public class Main {
	int N;
	int M;
	int[] trees;

	public void init() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		trees = new int[N];
		st = new StringTokenizer(br.readLine());

		for (int i = 0; i < N; i++) {
			trees[i] = Integer.parseInt(st.nextToken());
		}
	}

	public void solve() {
		int start = 0;
		int end = 1_000_000_000;
		int answer = 0;

		while(start <= end) {
			int mid = (start + end) / 2;

			if(canCutTrees(mid)){
				answer = mid;
				start = mid + 1;
			}else{
				end = mid - 1;
			}
		}

		System.out.println(answer);
	}

	public boolean canCutTrees(int height) {
		long cnt = 0;

		for (int tree : trees) {
			cnt += Math.max(tree - height, 0);
		}

		return cnt >= M;
	}

	public static void main(String[] args) throws IOException {
		Main m = new Main();
		m.init();
		m.solve();
	}
}