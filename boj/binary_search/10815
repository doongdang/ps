import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {
	int N;
	int M;
	int[] having;
	int[] guess;

	public void init() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());
		having = new int[N];
		StringTokenizer st = new StringTokenizer(br.readLine());

		for (int i = 0; i < N; i++) {
			having[i] = Integer.parseInt(st.nextToken());
		}

		M = Integer.parseInt(br.readLine());
		guess = new int[M];
		st = new StringTokenizer(br.readLine());

		for (int i = 0; i < M; i++) {
			guess[i] = Integer.parseInt(st.nextToken());
		}
	}

	public void solve() {
		Arrays.sort(having);
		StringBuilder answer = new StringBuilder();

		for (int card : guess) {
			int st = 0;
			int en = N-1;
			boolean find = false;

			while (st <= en) {
				int mid = (st + en) / 2;

				if(having[mid] == card){
					answer.append(1);
					find = true;
					break;
				}else if(having[mid] < card){
					st = mid + 1;
				}else{
					en = mid - 1;
				}
			}

			if(!find){
				answer.append(0);
			}

			answer.append(' ');
		}

		System.out.println(answer);
	}

	public static void main(String[] args) throws IOException {
		Main m = new Main();
		m.init();
		m.solve();
	}
}
