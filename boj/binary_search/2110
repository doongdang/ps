import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {//공유기 간의 거리가 k일 때 C개의 공유기 설치가 가능한가?
	static int N;
	static int C;
	static int[] houses;
	public static boolean install(int dist){
		int cnt = 1;
		int curHouse = houses[0];
		for (int i = 1; i < N; i++) {
			if(houses[i] - curHouse >= dist){
				cnt++;
				curHouse = houses[i];
			}
		}

		return cnt >= C;
	}

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;

		st = new StringTokenizer(br.readLine());

		N = Integer.parseInt(st.nextToken());
		C = Integer.parseInt(st.nextToken());
		houses = new int[N];

		for (int i = 0; i < N; i++) {
			houses[i] = Integer.parseInt(br.readLine());
		}

		Arrays.sort(houses);

		int maxDist = houses[N-1] - houses[0] + 1;
		int minDist = 1;

		while(minDist < maxDist){
			int midDist = (minDist + maxDist)/2;
			if(install(midDist)){
				minDist = midDist + 1;
			}else{
				maxDist = midDist;
			}
		}

		System.out.println(minDist-1);
	}
}
