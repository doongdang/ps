import java.io.*;
import java.util.*;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		StringBuilder sb = new StringBuilder();

		st = new StringTokenizer(br.readLine());
		
		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		
		LinkedList<Integer>[] adj = new LinkedList[N+1];
		int ans = 0;
		int minVal = Integer.MAX_VALUE;
		int[] baconNums = new int[N+1];
		
		for(int i = 1; i <= N; i++) {
			adj[i] = new LinkedList<Integer>();
		}
		
		for(int i = 0; i < M; i++) {
			st = new StringTokenizer(br.readLine());
			int A = Integer.parseInt(st.nextToken());
			int B = Integer.parseInt(st.nextToken());
			
			adj[A].add(B);
			adj[B].add(A);
		}
		
		Queue<Integer> queue = new LinkedList<>();
		
		for(int i = 1; i <= N; i++) {
			int[] dist = new int[N+1];
			Arrays.fill(dist, -1);
			dist[i] = 0;
			queue.offer(i);
			
			while(!queue.isEmpty()) {
				int cur = queue.poll();
				
				for(int nxt : adj[cur]) {
					if(dist[nxt] != -1) continue;
					dist[nxt] = dist[cur]+1;
					queue.offer(nxt);
				}
			}

			for(int val : dist) {
				baconNums[i] += val;
			}
			if(minVal > baconNums[i]) {
				ans = i;
				minVal = baconNums[i];
			}
		}
		
		System.out.println(ans);
	}
}
