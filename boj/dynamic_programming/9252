import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main {
	char[] x;
	char[] y;
	int[][] dp;
	String[][] strDp;

	public void init() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		String s1 = br.readLine();
		String s2 = br.readLine();

		if (s1.length() > s2.length()) {
			x = s2.toCharArray();
			y = s1.toCharArray();
		} else {
			x = s1.toCharArray();
			y = s2.toCharArray();
		}

		dp = new int[x.length][y.length];
		strDp = new String[x.length][y.length];

		for (int i = 0; i < x.length; i++) {
			Arrays.fill(dp[i], Integer.MIN_VALUE);
		}
	}

	public String recursion(int xIndex, int yIndex) {
		if (xIndex == x.length || yIndex == y.length) {
			return "";
		}

		if(strDp[xIndex][yIndex] != null) {
			return strDp[xIndex][yIndex];
		}

		String str = "";

		//x와 y의 문자가 같으면
		//둘다 이동
		if (x[xIndex] == y[yIndex]) {
			str = recursion(xIndex + 1, yIndex + 1) + x[xIndex];


		} else { //x와 y의 문자가 다르면
			// len = Math.max(recursion(xIndex + 1, yIndex), recursion(xIndex, yIndex + 1));

			String nxt1 = recursion(xIndex + 1, yIndex);
			String nxt2 = recursion(xIndex, yIndex + 1);

			if(nxt1.length() > nxt2.length()) {
				str = nxt1;
			}else {
				str = nxt2;
			}
		}

		strDp[xIndex][yIndex] = str;

		return strDp[xIndex][yIndex];
	}

	public void solve() {
		StringBuilder answer = new StringBuilder(recursion(0, 0));
		System.out.println(answer.length());

		if(answer.length() > 0) {
			System.out.println(answer.reverse());;
		}
	}

	public static void main(String[] args) throws IOException {
		Main m = new Main();
		m.init();
		m.solve();
	}
}