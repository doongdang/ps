import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;

		st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		int K = Integer.parseInt(st.nextToken());

		int[] dp = new int[K+1];
		int[] W = new int[N];
		int[] V = new int[N];
		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			W[i] = Integer.parseInt(st.nextToken());
			V[i] = Integer.parseInt(st.nextToken());
		}

		for (int i = 0; i < N; i++) {
			for (int j = K; j - W[i] >= 0; j--) {
				dp[j] = Math.max(dp[j], dp[j -W[i]] + V[i]);
			}
		}

		System.out.println(dp[K]);
	}
}

//Top-Down 풀이 추가

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {
	int N, K;
	int[][] items;
	int[][] dp;

	public void init() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		N = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		items = new int[N][2];
		dp = new int[N][K+1];

		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			items[i][0] = Integer.parseInt(st.nextToken());
			items[i][1] = Integer.parseInt(st.nextToken());
		}

		for (int i = 0; i < N; i++) {
			Arrays.fill(dp[i], -1);
		}
	}

	public void solve() {
		System.out.println(recursion(0, 0));
	}

	public int recursion(int cur, int weight) {
		if(weight > K){
			return Integer.MIN_VALUE;
		}

		if(cur == N){
			return 0;
		}

		if(dp[cur][weight] != -1){
			return dp[cur][weight];
		}

		dp[cur][weight] = Math.max(recursion(cur+1, weight), recursion(cur+1, weight+items[cur][0]) + items[cur][1]);
		return dp[cur][weight];
	}

	public static void main(String[] args) throws IOException {
		Main m = new Main();
		m.init();
		m.solve();
	}
}