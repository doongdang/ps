import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
    int N;
    int[] sours;
    int[] bitters;

    public void init() throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        N = Integer.parseInt(br.readLine());

        sours = new int[N];
        bitters = new int[N];

        for (int i = 0; i < N; i++) {
            StringTokenizer st = new StringTokenizer(br.readLine());
            sours[i] = Integer.parseInt(st.nextToken());
            bitters[i] = Integer.parseInt(st.nextToken());
        }
    }

    public int bitMasking() {
        int minVal = Integer.MAX_VALUE;

        for (int i = 1; i < (1<<N); i++) {
            int sour = 1;
            int bitter = 0;

            for (int j = 0; j < N; j++) {
                if((1 & (i >> j)) == 0) continue;
                sour *= sours[N-1-j];
                bitter += bitters[N-1-j];
            }

            minVal = Math.min(minVal, Math.abs(sour-bitter));
        }

        return minVal;
    }


    public static void main(String[] args) throws IOException {
        Main main = new Main();
        main.init();
        int answer = main.bitMasking();

        System.out.println(answer);
    }
}
