import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

class Pair{
	int val;
	int index;

	public Pair(int val, int index) {
		this.val = val;
		this.index = index;
	}
}

public class Main {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		StringBuilder sb = new StringBuilder();

		int N = Integer.parseInt(st.nextToken());
		int L = Integer.parseInt(st.nextToken());
		int[] A = new int[N];
		int[] answer = new int[N];

		st = new StringTokenizer(br.readLine());
		Deque<Pair> deque = new ArrayDeque<>();

		for (int i = 0; i < N; i++) {
			A[i] = Integer.parseInt(st.nextToken());

			while(!deque.isEmpty() && deque.peekLast().val > A[i]){
				deque.pollLast();
			}
			deque.offerLast(new Pair(A[i], i));

			if(deque.peekFirst().index <= i - L){
				deque.pollFirst();
			}
			answer[i] = deque.peekFirst().val;
		}

		for (int i = 0; i < N; i++) {
			sb.append(answer[i]).append(" ");
		}

		System.out.println(sb);
	}
}
