import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;


/*

*/

public class Main {
	int N;
	int K;
	int B;
	int[] lights;


	public void init() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		B = Integer.parseInt(st.nextToken());
		lights = new int[N+1];
		Arrays.fill(lights, 1);

		for (int i = 0; i < B; i++) {
			int idx = Integer.parseInt(br.readLine());
			lights[idx] = 0;
		}
	}

	public void solve() {
		int start = 1;
		int end = 1;
		int sum = 0;
		int answer = B;
		int fixedCnt = 0;

		while (end <= N) {
			if(lights[end] == 0) {
				fixedCnt++;
				sum += 1;
			}else{
				sum += lights[end];
			}

			if(sum == K) {
				answer = Math.min(answer, fixedCnt);

				if(lights[start] == 0) {
					sum -= 1;
					fixedCnt -= 1;
				}else{
					sum -= lights[start];
				}

				start++;
				end++;
			}else if(sum < K){
				end++;
			}
		}

		System.out.println(answer);
	}

	public static void main(String[] args) throws IOException {
		Main m = new Main();
		m.init();
		m.solve();
	}
}