import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


/*

*/

public class Main {
	int N;
	boolean[] isPrime;

	public void init() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());
		isPrime = new boolean[N + 1];
		Arrays.fill(isPrime, true);
	}

	public void solve() {
		for (int i = 2; i * i <= N ; i++) {
			if(!isPrime[i]) continue;
			for (int j = 2; j * i <= N; j++) {
				isPrime[j * i] = false;
			}
		}

		List<Integer> primes = new ArrayList<>();

		for (int i = 2; i <= N; i++) {
			if(isPrime[i]) primes.add(i);
		}

		int start = 0;
		int end = 0;
		int answer = 0;
		int sum = 0;

		while(end < primes.size()) {
			sum += primes.get(end);

			if(sum == N) {
				answer++;
				sum -= primes.get(start);
				start++;
				end++;
			}else if(sum < N){
				end++;
			}else{
				sum -= primes.get(end);
				sum -= primes.get(start);
				start++;
			}
		}

		System.out.println(answer);
	}

	public static void main(String[] args) throws IOException {
		Main m = new Main();
		m.init();
		m.solve();
	}
}