import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	int N;
	int[] T;
	int[] P;
	int answer;

	public void init() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		N = Integer.parseInt(br.readLine());
		T = new int[N];
		P = new int[N];

		for (int i = 0; i < N; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			T[i] = Integer.parseInt(st.nextToken());
			P[i] = Integer.parseInt(st.nextToken());
		}
	}

	public void solve() {
		recursion(0, 0);
		System.out.println(answer);
	}

	public void recursion(int cur, int profit) {
		if (cur == N) {
			answer = Math.max(answer, profit);
			return;
		}

		if(cur + T[cur] <= N) {
			recursion(cur + T[cur], profit + P[cur]);
			recursion(cur + 1, profit);
		}else{
			recursion(cur + 1, profit);
		}
	}

	public static void main(String[] args) throws IOException {
		Main m = new Main();
		m.init();
		m.solve();
	}
}