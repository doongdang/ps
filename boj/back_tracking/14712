import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

/*
	목표 : 주어진 NxM 크기의 격자 내에서 2x2 이상 크기의 사각형 배치가 가능한 경우의 수를 전체 경우의 수(2^(NxM))에서 제외해야 한다.

	조건 :


*/

public class Main {
	int N, M;
	boolean[][] board;
	int answer;

	public void init() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		board = new boolean[N][M];
	}

	public void solve() {
		backTracking(0, 0);

		System.out.println(answer);
	}

	private void backTracking(int row, int col) {
		if (col >= M) {
			row += 1;
			col = 0;
		}

		if (row >= N) {
			if (!checkValid()) {
				return;
			}

			answer += 1;
			return;
		}

		if (!checkValid()) {
			return;
		}

		board[row][col] = true;
		backTracking(row, col + 1);

		board[row][col] = false;
		backTracking(row, col + 1);
	}

	private boolean checkValid() {
		for (int i = 0; i < N - 1; i++) {
			for (int j = 0; j < M - 1; j++) {
				if (board[i][j] && board[i][j + 1] && board[i + 1][j] && board[i + 1][j + 1]) {
					return false;
				}
			}
		}

		return true;
	}

	public static void main(String[] args) throws IOException {
		Main m = new Main();
		m.init();
		m.solve();

	}
}
