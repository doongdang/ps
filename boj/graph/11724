import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;

		st = new StringTokenizer(br.readLine());

		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());

		ArrayList<Integer>[] list = new ArrayList[N+1];
		boolean[] vis = new boolean[N+1];
		int ans = 0;

		for(int i = 1; i <= N; i++){
			list[i] = new ArrayList();
		}

		for (int i = 0; i < M; i++){
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());

			list[a].add(b);
			list[b].add(a);
		}

		Queue<Integer> queue = new LinkedList<>();

		for (int i = 1; i <= N; i++) {
			if(!vis[i]){
				vis[i] = true;
				queue.offer(i);
				ans++;

				while(!queue.isEmpty()){
					int cur = queue.poll();

					for(int nxt : list[cur]){
						if(!vis[nxt]){
							vis[nxt] = true;
							queue.offer(nxt);
						}
					}
				}
			}
		}
		System.out.println(ans);
	}
}
