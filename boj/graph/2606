import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;

		int n = Integer.parseInt(br.readLine());
		int m = Integer.parseInt(br.readLine());

		LinkedList<Integer>[] adj = new LinkedList[n+1];
		boolean[] vis = new boolean[n+1];
		int ans = 0;

		for (int i = 1; i <= n; i++) {
			adj[i] = new LinkedList<>();
		}

		for (int i = 0; i < m; i++) {
			st = new StringTokenizer(br.readLine());

			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			adj[a].add(b);
			adj[b].add(a);
		}

		Queue<Integer> queue = new LinkedList<>();
		vis[1] = true;
		queue.offer(1);

		while (!queue.isEmpty()){
			int cur = queue.poll();

			for(int nxt : adj[cur]){
				if(!vis[nxt]){
					vis[nxt] = true;
					queue.offer(nxt);
					ans++;
				}
			}
		}
		System.out.println(ans);
	}
}
