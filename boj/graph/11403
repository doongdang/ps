import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Stack;
import java.util.StringTokenizer;

public class Main {

	static int N;
	static int[][] arr;

	public static int dfs(int st, int dst){
		boolean[] vis = new boolean[N];
		Stack<Integer> stack = new Stack<>();
		stack.push(st);

		while(!stack.isEmpty()){
			int cur = stack.pop();

			if(vis[cur]) continue;
			if(cur != st){
				vis[cur] = true;
			}

			for (int i = 0; i < N; i++) {
				if(arr[cur][i] == 1 && !vis[i]){
					if(i == dst){
						return 1;
					}
					stack.push(i);
				}
			}
		}

		return 0;
	}

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;

		N = Integer.parseInt(br.readLine());
		arr = new int[N][N];

		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j = 0; j < N; j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
			}
		}


		StringBuilder sb = new StringBuilder();
		for(int i = 0;  i < N; i++){
			for(int j = 0; j < N; j++){
				sb.append(dfs(i, j)).append(" ");
			}
			sb.append("\n");
		}
		System.out.println(sb);
	}
}
